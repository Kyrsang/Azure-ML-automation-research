name: Talk to the deployed Azure ML endpoint    

on:
  workflow_dispatch:

jobs:
  run-script:
    runs-on: ubuntu-latest
    
    steps:
      - name: Run JavaScript with GitHub Script
        uses: actions/github-script@v7
        with:
          script: |
            // Request data goes here
            const requestBody = JSON.stringify({
              data: [
                  [5.1, 2.5, 3.0, 1.1],
                  [5.7, 2.8, 4.1, 1.3],
                  [6.3, 3.3, 6.0, 2.5],
                  [5.8, 2.7, 5.1, 1.9],
                  [7.1, 3.0, 5.9, 2.1],
                  [6.3, 2.9, 5.6, 1.8],
                  [6.5, 3.0, 5.8, 2.2],
                  [7.6, 3.0, 6.6, 2.1],
                  [4.9, 2.5, 4.5, 1.7],
                  [7.3, 2.9, 6.3, 1.8],
                  [6.7, 2.5, 5.8, 1.8],
                  [7.2, 3.6, 6.1, 2.5],
                  [6.5, 3.2, 5.1, 2.0],
                  [6.4, 2.7, 5.3, 1.9],
                  [6.8, 3.0, 5.5, 2.1]
                ]
            });
            
            const requestHeaders = new Headers({"Content-Type" : "application/json"});

            // Retrieve the API key from the environment variable
            const apiKey = process.env.ENDPOINT_PRIMARY_KEY;
            if (!apiKey) {
              throw new Error("A key should be provided to invoke the endpoint");
            }
            requestHeaders.append("Authorization", "Bearer " + apiKey);

            // This header will force the request to go to a specific deployment.
            requestHeaders.append("azureml-model-deployment", "model-deployment-eunsang");
            
            const url = "https://endpoint-eunsang.koreacentral.inference.ml.azure.com/score";
            
            fetch(url, {
              method: "POST",
              body: requestBody,
              headers: requestHeaders
            })
              .then((response) => {
                if (response.ok) {
                  return response.json();
                } else {
                  // Print the headers - they include the request ID and the timestamp, which are useful for debugging the failure
                  console.debug(...response.headers);
                  console.debug(response.body);
                  throw new Error("Request failed with status code " + response.status);
                }
              })
              .then((json) => console.log(json))
              .catch((error) => {
                console.error(error);
              });
        env:
          ENDPOINT_PRIMARY_KEY: ${{ secrets.ENDPOINT_PRIMARY_KEY }}
