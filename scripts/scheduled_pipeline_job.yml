$schema: https://azuremlschemas.azureedge.net/latest/pipelineJob.schema.json
type: pipeline
display_name: scheduled_pipeline
compute: azureml:eunsang-ml-research

settings: 
  force_rerun: True 
  
jobs:
  prepare_dataset:
    command: |

      # Create dataset and extract path
      DATA_OUTPUT=$(az ml data create --name iris-dataset \
        --path /app/datasets \
        --type mltable \
        --workspace-name inbrein-azure-ml-research-eunsang \
        --resource-group inbrein-azure-ml-research \
        --query "path" -o tsv)

      # Save the path to an output file
      echo $DATA_OUTPUT > ${{outputs.dataset_path}}/dataset_path.txt

    environment:
      image: eunsangacr.azurecr.io/azureml-with-azcli:latest
    outputs:
      dataset_path:
  
  setup_automl:
    command: |
      # Read the dataset path from the input file
      DATA_PATH=$(cat ${{inputs.dataset_path}}/dataset_path.txt)

      # Create automl job using the dataset path and capture job name
      JOB_NAME=$(az ml job create --file /app/configs/automl_settings.yml \
        --set training_data.path=${DATA_PATH} \
        --workspace-name inbrein-azure-ml-research-eunsang \
        --resource-group inbrein-azure-ml-research \
        --query "name" -o tsv)

      # Save the job name to an output file
      echo $JOB_NAME > ${{outputs.automl_job_name}}/job_name.txt
  
    environment:
      image: eunsangacr.azurecr.io/azureml-with-azcli:latest  
    inputs:
      dataset_path: ${{parent.jobs.prepare_dataset.outputs.dataset_path}}
    outputs:
      automl_job_name:

  monitor_automl:
    command: |
      # Read the AutoML job name from the input file
      JOB_NAME=$(cat ${{inputs.automl_job_name_input}}/job_name.txt)

      # Initialize job status
      JOB_STATUS=""

      # Loop until the job is completed
      while [ "$JOB_STATUS" != "Completed" ]; do
        # Check the job status
        JOB_STATUS=$(az ml job show --name $JOB_NAME \
          --query "status" -o tsv \
          --workspace-name inbrein-azure-ml-research-eunsang \
          --resource-group inbrein-azure-ml-research 2>&1) # Capture standard error

        # Check for errors during status check
        if [ $? -ne 0 ]; then
          echo "Error checking job status: $JOB_STATUS"
          exit 1
        fi

        # If the job is still running, wait for a few minutes before checking again
        if [ "$JOB_STATUS" != "Completed" ]; then
          echo "Job status: $JOB_STATUS. Waiting for 5 minutes before checking again..."
          sleep 300  # Sleep for 5 minutes
        fi
      done
      
    environment:
      image: eunsangacr.azurecr.io/azureml-with-azcli:latest
    inputs:
      automl_job_name_input: ${{parent.jobs.setup_automl.outputs.automl_job_name}}
    outputs:
      model_path:

